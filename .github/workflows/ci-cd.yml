name: "CI/CD"

on:
  push:
  pull_request:
    # We don't run on PR synchronize because we already run on any push, which already covers PR updates
    types: [ opened ]
  workflow_dispatch: { }

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  publish:
    needs: lint
    name: "Publish on expo.dev"
    uses: ./.github/workflows/publish.yml
    secrets: inherit

  build-android:
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/'))
    name: "Build Android APK"
    uses: ./.github/workflows/build-android.yml
    secrets: inherit

  build-ios:
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/'))
    name: "Build iOS App"
    uses: ./.github/workflows/build-ios.yml
    secrets: inherit

  check-release-version:
    name: "Check release version"
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
        with:
          # actions/checkout does a shallow clone by default, which doesn't pull any tags
          fetch-depth: 0

      - name: Get current package version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Check that package version and release version match
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          ref_version="${GITHUB_REF#refs/heads/release/}"
          if [[ "$ref_version" != "${{ steps.extract_version.outputs.version }}" ]]; then
            echo "::error title=Version Mismatch::Version '$ref_version' from branch name does not match package version '${{ steps.extract_version.outputs.version }}'. Did you bump the package version?"
            exit 1
          fi

      - name: Check that no tag for the current version already exists
        run: |
          git tag -l
          if git tag -l | grep -Fxq "v${{ steps.extract_version.outputs.version }}"; then
            echo "::error title=v${{ steps.extract_version.outputs.version }} already exists::The release tag 'v${{ steps.extract_version.outputs.version }}' already exists."
            exit 1
          fi

  release:
    name: "Release"
    if: github.ref == 'refs/heads/main'
    needs: [ lint, publish, build-android, build-ios, check-release-version ]
    runs-on: ubuntu-latest
    # Prevent multiple release jobs running at once
    concurrency: release
    permissions:
      # Needed to push tags
      contents: write
    steps:
      - uses: actions/checkout@v2

      - uses: fregante/setup-git-user@v1

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Create tag
        run: |
          git tag -a "v${{ steps.extract_version.outputs.version }}" -m "Release ${{ steps.extract_version.outputs.version }}"
          git push --tags

      - name: Create release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          files: artifacts/**

      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary
      - name: Generate job summary
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" <<EOT
          ### [KopfsachenRNA ${{ steps.extract_version.outputs.version }}](${{ steps.release.outputs.url }}) has been released :rocket:
          EOT
